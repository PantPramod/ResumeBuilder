{"version":3,"sources":["Objective.module.css","Header.module.css","Education.js","Header.js","Objective.js","PersonalDetails.js","Resume.js","Resume2.js","Skills.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Education","props","courseRef","useRef","collegeRef","gradeRef","yearRef","useState","count","setCount","eduSection","className","educount","type","ref","savehandler","obj","course","current","value","college","grade","year","Onsubmit","onClick","Onclose","Header","classes","h1","Objective","objref","onSubmit","event","preventDefault","htmlFor","id","name","placeholder","save","add","PersonalDetails","nameRef","addRef","emailRef","phoneRef","dobRef","maritalRef","nationalityRef","websiteRef","personalDetails","email","phone","dob","ms","nationality","website","Resume","divRef","fontSize","setFontSize","style","pd","edu","map","item","skill","onChange","i","target","targetRef","fileName","options","unit","format","scale","toPdf","Resume2","width","expertise","Skills","skillRef","setexpertise","background","App","page","setPage","setObj","setEdu","setPersonalDetails","skills","setSkills","prevskills","prevEdu","length","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2d0cda5b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Objective_label__3mmrd\",\"textarea\":\"Objective_textarea__1nyRB\",\"save\":\"Objective_save__3xMeF\",\"add\":\"Objective_add___77w8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"h1\":\"Header_h1__duqDE\"};","import { useState, useRef } from 'react';\r\n\r\nconst Education = (props) => {\r\n    const courseRef = useRef('');\r\n    const collegeRef = useRef('');\r\n    const gradeRef = useRef('');\r\n    const yearRef = useRef('');\r\n    const [count, setCount] = useState(0);\r\n    const [edu, setEdu] = useState([]);\r\n\r\n    const eduSection = <div className=\"edu\">\r\n        <p>Education {props.educount + 1}</p><br />\r\n        <label>Course/Degree</label><br />\r\n        <input type=\"text\" ref={courseRef} /><br />\r\n        <label>School / University</label><br />\r\n        <input type=\"text\" ref={collegeRef} /><br />\r\n        <label>Grade / Score </label><br />\r\n        <input type=\"text\" ref={gradeRef} /><br />\r\n        <label>Year</label><br />\r\n        <input type=\"text\" ref={yearRef} /><br />\r\n    </div>\r\n    const addEducation = () => {\r\n        if (count > 0) {\r\n            savehandler();\r\n            props.Onclose()\r\n        }\r\n        setCount(count + 1);\r\n\r\n\r\n    }\r\n    const savehandler = () => {\r\n        const obj = {\r\n            course: courseRef.current.value,\r\n            college: collegeRef.current.value,\r\n            grade: gradeRef.current.value,\r\n            year: yearRef.current.value\r\n        }\r\n        props.Onsubmit(obj);\r\n        courseRef.current.value = \"\"\r\n        collegeRef.current.value = \"\"\r\n        gradeRef.current.value = \"\"\r\n        yearRef.current.value = \"\"\r\n    }\r\n\r\n\r\n\r\n    return (<>\r\n        <button className=\"close\" onClick={() => props.Onclose()}>X</button>\r\n        {count > 0 && eduSection}\r\n        <div className=\"center\">\r\n            <button className=\"add\" onClick={addEducation}>+ Add</button>\r\n            {count > 0 && <button className=\"save\" onClick={savehandler}>Save</button>}\r\n        </div>\r\n    </>)\r\n}\r\n\r\nexport default Education","import classes from './Header.module.css';\r\n\r\n\r\nconst Header = () => {\r\n    return (\r\n        <header>\r\n            <h1 className={classes.h1}>Resume Builder </h1>\r\n\r\n\r\n\r\n\r\n        </header>)\r\n}\r\nexport default Header;","import { useRef } from 'react';\r\nimport classes from './Objective.module.css';\r\n\r\nconst Objective = (props) => {\r\n    const objref = useRef('');\r\n    const submithandler = (event) => {\r\n        event.preventDefault();\r\n\r\n        props.Onsubmit(objref.current.value)\r\n        props.Onclose();\r\n    }\r\n    return (<div className=\"objective\">\r\n\r\n        <form onSubmit={submithandler}>\r\n            <br />\r\n            <label htmlFor=\"obj\" >Objective</label><br />\r\n            <textarea ref={objref} id=\"obj\" name=\"obj\" placeholder=\"enter your objective here\"></textarea><br />\r\n            <button type=\"submit\" className={classes.save}>Save</button>\r\n            <button className={classes.add}>Browse</button>\r\n            <button type=\"button\" onClick={() => props.Onclose()} className=\"close\">X</button>\r\n        </form>\r\n    </div>)\r\n}\r\n\r\nexport default Objective;","import { useRef } from 'react';\r\n\r\nconst PersonalDetails = (props) => {\r\n    const nameRef = useRef('');\r\n    const addRef = useRef('');\r\n    const emailRef = useRef('');\r\n    const phoneRef = useRef('');\r\n    const dobRef = useRef('');\r\n    const maritalRef = useRef('');\r\n    const nationalityRef = useRef('');\r\n    const websiteRef = useRef('');\r\n\r\n    const submithandler = (event) => {\r\n        event.preventDefault();\r\n\r\n        const personalDetails = {\r\n            name: nameRef.current.value,\r\n            add: addRef.current.value,\r\n            email: emailRef.current.value,\r\n            phone: phoneRef.current.value,\r\n            dob: dobRef.current.value,\r\n            ms: maritalRef.current.value,\r\n            nationality: nationalityRef.current.value,\r\n            website: websiteRef.current.value\r\n        }\r\n        props.Onsubmit(personalDetails)\r\n        props.Onclose();\r\n    }\r\n\r\n    return (<>\r\n        <button className=\"close\" onClick={() => props.Onclose()}>X</button>\r\n        <form className=\"pd\" onSubmit={submithandler}>\r\n            <label>Name</label><br />\r\n            <input type=\"text\" ref={nameRef} placeholder=\"Your name\" /><br />\r\n            <label>Address</label><br />\r\n            <textarea ref={addRef} placeholder=\"Your Address\"></textarea><br />\r\n            <label>Email</label><br />\r\n            <input ref={emailRef} type=\"email\" placeholder=\"Your Email Id\" /><br />\r\n            <label>Phone</label><br />\r\n            <input ref={phoneRef} type=\"number\" placeholder=\"9876543210\" /><br />\r\n            <label>Date of Birth</label><br />\r\n            <input type=\"text\" ref={dobRef} placeholder=\"01/Dec/1998\" /><br />\r\n            <label>Marital Status</label><br />\r\n            <input type=\"text\" ref={maritalRef} placeholder=\"Single or Married\" /><br />\r\n            <label>Nationality</label><br />\r\n            <input type=\"text\" placeholder=\"Indian\" ref={nationalityRef} /><br />\r\n            <label>Website</label><br />\r\n            <input type=\"text\" placeholder=\"www.pramodpant.tk\" ref={websiteRef} /><br />\r\n            <button type=\"submit\" className=\"sub-btn\">Submit</button>\r\n        </form>\r\n    </>)\r\n}\r\nexport default PersonalDetails;","import Pdf from 'react-to-pdf';\r\nimport { useRef, useState } from 'react'\r\nconst Resume = (props) => {\r\n    const divRef = useRef();\r\n    const [fontSize, setFontSize] = useState(20)\r\n    const options = {\r\n\r\n        unit: 'px',\r\n        format: [500, 750]\r\n    };\r\n    return (<><div style={{ fontSize: `${fontSize}px` }} ref={divRef} className=\"resume\" id=\"resume\">\r\n        <hr />\r\n        <h1>{props.pd.name}</h1>\r\n        <h2>Objective</h2>\r\n        <p style={{ fontSize: `${fontSize}px` }}>{props.obj}</p>\r\n        <br />\r\n        <hr />\r\n        <h2>Education</h2>\r\n        {props.edu.map((item) => <p>{item.course} from {item.college} with {item.grade} in {item.year}</p>)}\r\n\r\n        <hr />\r\n        <h2>Skills</h2>\r\n        <ul>\r\n            <p>{props.skill.map((item) => <li>{item.skill}</li>)}</p>\r\n        </ul>\r\n        <hr />\r\n        <h2>Contacts</h2>\r\n        <p>{props.pd.email}</p>\r\n        <p>{props.pd.add}</p>\r\n        <p>Phone : {props.pd.phone}</p>\r\n        <h2>Personal Details</h2>\r\n        <p>Date Of Birth:{props.pd.dob}</p>\r\n        <p>Marital Status:{props.pd.ms}</p>\r\n        <p>Nationality:{props.pd.nationality}</p>\r\n    </div>\r\n        <button type=\"button\" onClick={() => props.Onclose()} className=\"close\">X</button>\r\n        <input type=\"number\" onChange={(i) => setFontSize(i.target.value)} placeholder=\"set font size in px\" />\r\n        <Pdf targetRef={divRef} fileName=\"resumedownload.pdf\" options={options} scale={1.48} >\r\n            {({ toPdf }) => <button onClick={toPdf}>Generate Pdf</button>}\r\n        </Pdf>\r\n    </>)\r\n}\r\n\r\nexport default Resume;","import Pdf from 'react-to-pdf';\r\nimport { useRef } from 'react';\r\n\r\nconst Resume2 = (props) => {\r\n    const divRef = useRef();\r\n\r\n    const options = {\r\n        unit: 'px',\r\n        format: [500, 750]\r\n    };\r\n    return (<><div className=\"container\" ref={divRef} >\r\n        <div className=\"innercontainer1\">\r\n            <p className=\"name\">{props.pd.name}</p>\r\n            <p className=\"darkbg\">Contacts</p>\r\n            <p>{props.pd.email}</p>\r\n            <p>{props.pd.phone}</p>\r\n            <p>{props.pd.add}</p>\r\n            <p className=\"darkbg\">Personal Details</p>\r\n            <p>Date of Birth : {props.pd.dob}</p>\r\n            <p>Marital Status : {props.pd.ms}</p>\r\n            <p>Nationality :{props.pd.nationality}</p>\r\n            <p className=\"darkbg\">Skills</p>\r\n            {props.skill.map((item) => <><p>{item.skill}</p><button style={{ width: `${item.expertise * 2}px` }}></button></>)}\r\n            <p>Achievements and Awards</p>\r\n        </div>\r\n        <div className=\"innercontainer2\">\r\n            <p>Objective</p>\r\n            <p>{props.obj}</p>\r\n\r\n        </div>\r\n    </div>\r\n        {/* <hr />\r\n        <h1>{props.pd.name}</h1>\r\n        <h2>Objective</h2>\r\n        <p style={{ fontSize: `${fontSize}px` }}>{props.obj}</p>\r\n        <br />\r\n        <hr />\r\n        <h2>Education</h2>\r\n        {props.edu.map((item) => <p>{item.course} from {item.college} with {item.grade} in {item.year}</p>)}\r\n\r\n        <hr />\r\n        <h2>Skills</h2>\r\n        <ul>\r\n            <p>{props.skill.map((item) => <li>{item.skill}</li>)}</p>\r\n        </ul>\r\n        <hr />\r\n        <h2>Contacts</h2>\r\n        <p>{props.pd.email}</p>\r\n        <p>{props.pd.add}</p>\r\n        <p>Phone : {props.pd.phone}</p>\r\n        <h2>Personal Details</h2>\r\n        <p>Date Of Birth:{props.pd.dob}</p>\r\n        <p>Marital Status:{props.pd.ms}</p>\r\n        <p>Nationality:{props.pd.nationality}</p>\r\n    </div>\r\n        <button type=\"button\" onClick={() => props.Onclose()} className=\"close\">X</button>\r\n        <input type=\"number\" onChange={(i) => setFontSize(i.target.value)} placeholder=\"set font size in px\" /> */}\r\n        <Pdf targetRef={divRef} fileName=\"resumedownload.pdf\" options={options} scale={1.48} >\r\n            {({ toPdf }) => <button onClick={toPdf}>Generate Pdf</button>}\r\n        </Pdf>\r\n    </>)\r\n}\r\n\r\nexport default Resume2;","import { useRef, useState } from 'react';\r\n\r\nconst Skills = (props) => {\r\n    const skillRef = useRef('');\r\n    const [expertise, setexpertise] = useState();\r\n    const submithandler = () => {\r\n        const obj = {\r\n            skill: skillRef.current.value,\r\n            expertise: expertise\r\n        }\r\n        props.Onsubmit(obj);\r\n        skillRef.current.value = \"\";\r\n        setexpertise();\r\n        props.Onclose()\r\n    }\r\n    return (<>\r\n        <button className=\"close\" onClick={() => props.Onclose()}>X</button>\r\n        <br />\r\n        <label>Skill</label>\r\n        <br />\r\n        <input type=\"text\" ref={skillRef} />\r\n        <br />\r\n        <label>Expertice</label>\r\n\r\n        <div className=\"btngroup\">\r\n            <button style={expertise == 1 ? { background: \"green\" } : {}} onClick={() => setexpertise(1)}>1</button>\r\n            <button style={expertise == 2 ? { background: \"green\" } : {}} onClick={() => setexpertise(2)}>2</button>\r\n            <button style={expertise == 3 ? { background: \"green\" } : {}} onClick={() => setexpertise(3)}>3</button>\r\n            <button style={expertise == 4 ? { background: \"green\" } : {}} onClick={() => setexpertise(4)}>4</button>\r\n            <button style={expertise == 5 ? { background: \"green\" } : {}} onClick={() => setexpertise(5)}>5</button><br /><br />\r\n        </div>\r\n\r\n        <button onClick={submithandler} className=\"sub-btn\">Save</button>\r\n    </>)\r\n}\r\n\r\nexport default Skills;\r\n","import { useState, Fragment } from 'react';\nimport './App.css'\nimport Education from './Education';\nimport Header from './Header';\nimport Objective from './Objective';\nimport PersonalDetails from './PersonalDetails';\nimport Resume from './Resume';\nimport Resume2 from './Resume2';\nimport Skills from './Skills';\n\nconst App = () => {\n  const [page, setPage] = useState('');\n  const [obj, setObj] = useState('');\n  const [edu, setEdu] = useState([]);\n  const [personalDetails, setPersonalDetails] = useState({})\n  const [skills, setSkills] = useState([]);\n\n  if (page === \"\")\n    return (<Fragment>\n      <Header />\n\n      <ul className=\"list\">\n        <li onClick={() => setPage(\"obj\")}>Objective</li>\n        <li onClick={() => setPage(\"per\")}>Personal Details</li>\n        <li onClick={() => setPage(\"edu\")}>Educational Details </li>\n        <li onClick={() => setPage(\"ski\")}>Skills</li>\n        <li onClick={() => setPage(\"exp\")}>Exprience</li>\n        <li onClick={() => setPage(\"ach\")}>Achievement and Awards</li>\n      </ul>\n\n      <button className=\"sub-btn\" onClick={() => setPage(\"viewResume\")} >View CV</button>\n      <button className=\"sub-btn\" onClick={() => setPage(\"viewResume2\")} >View CV 2</button>\n\n    </Fragment>)\n\n\n  if (page === \"obj\") return (<><Header /><Objective Onclose={() => setPage(\"\")} Onsubmit={(i) => setObj(i)} /></>)\n  if (page === \"per\") return (<><Header /><PersonalDetails Onclose={() => setPage(\"\")} Onsubmit={(i) => setPersonalDetails(i)} /></>)\n  if (page === \"ski\") return (<><Header /><Skills Onclose={() => setPage(\"\")} Onsubmit={(i) => setSkills((prevskills) => [...prevskills, i])} /></>)\n  if (page === \"edu\") return (<><Header /><Education Onclose={() => setPage(\"\")} Onsubmit={(i) => setEdu((prevEdu) => [...prevEdu, i])} educount={edu.length} /></>)\n  if (page == \"viewResume\") return (<Resume Onclose={() => setPage(\"\")} Onsubmit={(i) => setObj(i)} obj={obj} edu={edu} pd={personalDetails} skill={skills} />)\n  if (page == \"viewResume2\") return (<Resume2 Onclose={() => setPage(\"\")} Onsubmit={(i) => setObj(i)} obj={obj} edu={edu} pd={personalDetails} skill={skills} />)\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}